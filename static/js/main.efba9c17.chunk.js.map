{"version":3,"sources":["utils/fetchClient.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/ErorsField.tsx","components/Footer.tsx","components/header.tsx","components/Loader.tsx","components/TodosList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","ErorsField","props","onCloseError","unableAddTodo","unableEmptyTitle","unableDeleteTodo","unableUpdateTodo","onClick","Footer","todos","setTodos","filterBy","setfilterBy","deleteCompletedTodos","useCallback","map","todo","completed","prev","filter","length","href","selected","hidden","some","Header","setSelectedTodoId","setIsLoading","setUnableAddTodo","setUnableEmptyTitle","isAllActive","setisAllActive","newTodo","setNewTodo","useContext","newTodoField","useRef","addTodo","trim","title","userId","res","catch","finally","updateAllTodoStatus","current","focus","ref","onBlur","Loader","TodosList","selectedTodoId","isLoading","setUnableUpdateTodo","setunableDeleteTodo","editTodo","setEditTodo","todoTitle","setTodoTitle","editTodoField","updateTodoStatus","todoId","todoComleted","slice","findIndex","deleteTodo","updateTodoTitle","visibleTodos","useMemo","onDoubleClick","includes","App","setUnableDeleteTodo","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.efba9c17.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { FC } from 'react';\n\ntype Props = {\n  onCloseError: () => void,\n  unableAddTodo: boolean,\n  unableEmptyTitle: boolean,\n  unableDeleteTodo: boolean,\n  unableUpdateTodo: boolean,\n};\n\nexport const ErorsField: FC<Props> = (props) => {\n  const {\n    onCloseError,\n    unableAddTodo,\n    unableEmptyTitle,\n    unableDeleteTodo,\n    unableUpdateTodo,\n  } = props;\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className=\"notification is-danger is-light has-text-weight-normal\"\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => {\n          onCloseError();\n        }}\n      />\n      {(unableAddTodo || unableEmptyTitle) && 'Unable to add a todo'}\n      {unableDeleteTodo && 'Unable to delete a todo'}\n      {unableUpdateTodo && 'Unable to update a todo'}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { FC, useCallback } from 'react';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  filterBy: string,\n  setfilterBy: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const Footer: FC<Props> = (props) => {\n  const {\n    todos,\n    setTodos,\n    filterBy,\n    setfilterBy,\n  } = props;\n\n  const deleteCompletedTodos = useCallback(() => {\n    todos.map(todo => (todo.completed ? client.delete(`/todos/${todo.id}`) : todo));\n    setTodos(prev => prev.filter(todo => !todo.completed));\n  }, [todos]);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.filter(todo => todo.completed !== true).length} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === 'all' },\n          )}\n          onClick={() => setfilterBy('all')}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === 'active' },\n          )}\n          onClick={() => setfilterBy('active')}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === 'completed' },\n          )}\n          onClick={() => setfilterBy('completed')}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className={classNames(\n          'todoapp__clear-completed',\n          { hidden: !todos.some(todo => todo.completed) },\n        )}\n        onClick={() => deleteCompletedTodos()}\n        disabled={!todos.some(todo => todo.completed)}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\nimport { AuthContext } from './Auth/AuthContext';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodoId: React.Dispatch<React.SetStateAction<number[]>>,\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  setUnableAddTodo: React.Dispatch<React.SetStateAction<boolean>>,\n  setUnableEmptyTitle: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const Header: React.FC<Props> = (props) => {\n  const {\n    todos,\n    // selectedTodoId,\n    setSelectedTodoId,\n    setIsLoading,\n    setTodos,\n    setUnableAddTodo,\n    setUnableEmptyTitle,\n  } = props;\n\n  const [isAllActive, setisAllActive] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  const addTodo = useCallback(() => {\n    setIsLoading(true);\n    if (user && newTodo.trim().length) {\n      client.post<Todo>('/todos', {\n        title: newTodo,\n        userId: user?.id,\n        completed: false,\n      })\n        .then(res => {\n          setTodos(prev => [...prev, res]);\n          setSelectedTodoId([res.id]);\n        })\n        .catch(() => setUnableAddTodo(true))\n        .finally(() => {\n          setTimeout(() => {\n            setIsLoading(false);\n            setSelectedTodoId([]);\n          }, 500);\n        });\n    }\n\n    setNewTodo('');\n  }, [newTodo]);\n\n  const updateAllTodoStatus = useCallback(() => {\n    setIsLoading(true);\n    setSelectedTodoId([...todos.map(todo => todo.id)]);\n    setisAllActive(!isAllActive);\n\n    todos.map(todo => client.patch(`/todos/${todo.id}`, { completed: isAllActive }));\n\n    setTodos(prev => prev.map(todo => ({\n      ...todo,\n      completed: isAllActive,\n    })));\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n  }, [isAllActive, todos]);\n\n  useEffect(() => {\n    // focus the element with `ref={newTodoField}`\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        data-cy=\"ToggleAllButton\"\n        type=\"button\"\n        className=\"todoapp__toggle-all active\"\n        onClick={() => updateAllTodoStatus()}\n      />\n\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        if (!newTodo.trim().length) {\n          setUnableEmptyTitle(true);\n          setTimeout(() => setUnableEmptyTitle(false), 1500);\n        }\n\n        addTodo();\n      }}\n      >\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodo}\n          onChange={(event) => setNewTodo(event.target.value)}\n          onBlur={() => {\n            addTodo();\n          }}\n        />\n      </form>\n    </header>\n  );\n};\n","import React from 'react';\n\nexport const Loader = () => {\n  return (\n    <div\n      data-cy=\"TodoLoader\"\n      className=\"modal overlay is-active\"\n    >\n      <div\n        className=\"modal-background has-background-white-ter\"\n      />\n      <div className=\"loader\" />\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, {\n  useCallback,\n  useEffect, useMemo,\n  useRef,\n  useState,\n}\n  from 'react';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\nimport { Loader } from './Loader';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number[]\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  setSelectedTodoId: React.Dispatch<React.SetStateAction<number[]>>,\n  isLoading: boolean,\n  filterBy: string,\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  setUnableUpdateTodo: React.Dispatch<React.SetStateAction<boolean>>,\n  setunableDeleteTodo: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodosList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    selectedTodoId,\n    setSelectedTodoId,\n    setIsLoading,\n    isLoading,\n    filterBy,\n    setTodos,\n    setUnableUpdateTodo,\n    setunableDeleteTodo,\n  } = props;\n\n  const [editTodo, setEditTodo] = useState(false);\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const editTodoField = useRef<HTMLInputElement>(null);\n\n  const updateTodoStatus = useCallback(\n    (todoId: number, todoComleted: boolean) => {\n      setIsLoading(true);\n      setSelectedTodoId([todoId]);\n      client.patch<Todo>(`/todos/${todoId}`, { completed: !todoComleted })\n        .then(res => setTodos(prev => [...prev\n          .slice(0, prev.findIndex(todo => todo.id === res.id)), res, ...prev\n          .slice(prev.findIndex(todo => todo.id === res.id) + 1)]))\n        .catch(() => setUnableUpdateTodo(true))\n        .finally(() => setIsLoading(false));\n    }, [selectedTodoId],\n  );\n\n  const deleteTodo = useCallback((todoId: number) => {\n    setIsLoading(true);\n    setSelectedTodoId([todoId]);\n    client.delete(`/todos/${todoId}`)\n      .then(res => {\n        if (res === 1) {\n          setTodos(prev => prev.filter(todo => todo.id !== todoId));\n          setSelectedTodoId([]);\n        }\n      })\n      .catch(() => setunableDeleteTodo(true))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodoId]);\n\n  const updateTodoTitle = useCallback((todoId: number) => {\n    setSelectedTodoId([todoId]);\n    setIsLoading(true);\n    client.patch<Todo>(`/todos/${todoId}`, { title: todoTitle })\n      .then(res => {\n        setTodos(prev => [...prev.slice(0, prev\n          .findIndex(todo => todo.id === res.id)), res, ...prev.slice(prev\n          .findIndex(todo => todo.id === res.id) + 1)]);\n      })\n      .finally(() => setTimeout(() => setIsLoading(false), 500));\n    setTodoTitle('');\n    setEditTodo(false);\n  }, [todoTitle]);\n\n  useEffect(() => {\n    // focus the element with `ref={newTodoField}`\n    if (editTodo) {\n      editTodoField.current?.focus();\n    }\n  }, [editTodo]);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filterBy) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n  }, [filterBy, todos]);\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {visibleTodos.map(todo => (\n        <div\n          data-cy=\"Todo\"\n          className={classNames('todo', { completed: todo.completed })}\n          key={todo.id}\n        >\n          <label className=\"todo__status-label\">\n            <input\n              data-cy=\"TodoStatus\"\n              type=\"checkbox\"\n              className=\"todo__status\"\n              onChange={() => updateTodoStatus(todo.id, todo.completed)}\n            />\n          </label>\n\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => {\n              setSelectedTodoId([todo.id]);\n              setTodoTitle(todo.title);\n              setEditTodo(true);\n            }}\n          >\n            {(editTodo && selectedTodoId.includes(todo.id))\n              ? (\n                <form onSubmit={(event) => {\n                  event.preventDefault();\n                  updateTodoTitle(todo.id);\n                }}\n                >\n                  <input\n                    type=\"text\"\n                    ref={editTodoField}\n                    className=\"todoapp__edit-todo\"\n                    value={todoTitle}\n                    onChange={\n                      (event) => setTodoTitle(event.target.value)\n                    }\n                    onBlur={() => updateTodoTitle(todo.id)}\n                  />\n                </form>\n              )\n              : todo.title}\n          </span>\n          {!editTodo && (\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDeleteButton\"\n              onClick={() => {\n                setSelectedTodoId([todo.id]);\n                deleteTodo(todo.id);\n              }}\n            >\n              ×\n            </button>\n          )}\n          {(isLoading\n            && selectedTodoId.includes(todo.id))\n            && (\n              <Loader />\n            )}\n\n        </div>\n      ))}\n\n    </section>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useCallback,\n  useContext, useEffect, useState,\n} from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { ErorsField } from './components/ErorsField';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/header';\nimport { TodosList } from './components/TodosList';\nimport { Todo } from './types/Todo';\nimport { client } from './utils/fetchClient';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [filterBy, setfilterBy] = useState('');\n  const [unableAddTodo, setUnableAddTodo] = useState(false);\n  const [unableDeleteTodo, setUnableDeleteTodo] = useState(false);\n  const [unableUpdateTodo, setUnableUpdateTodo] = useState(false);\n  const [unableEmptyTitle, setUnableEmptyTitle] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number[]>([]);\n\n  const user = useContext(AuthContext);\n\n  useEffect(() => {\n    if (user) {\n      client.get<Todo[]>(`/todos?userId=${user.id}`)\n        .then(setTodos);\n    }\n  }, []);\n\n  const onCloseError = useCallback(() => {\n    setUnableAddTodo(false);\n    setUnableEmptyTitle(false);\n    setUnableDeleteTodo(false);\n    setUnableUpdateTodo(false);\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          todos={todos}\n          setSelectedTodoId={setSelectedTodoId}\n          setIsLoading={setIsLoading}\n          setTodos={setTodos}\n          setUnableAddTodo={setUnableAddTodo}\n          setUnableEmptyTitle={setUnableEmptyTitle}\n        />\n\n        <TodosList\n          selectedTodoId={selectedTodoId}\n          setSelectedTodoId={setSelectedTodoId}\n          todos={todos}\n          setIsLoading={setIsLoading}\n          isLoading={isLoading}\n          setTodos={setTodos}\n          setUnableUpdateTodo={setUnableUpdateTodo}\n          setunableDeleteTodo={setUnableDeleteTodo}\n          filterBy={filterBy}\n        />\n\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            setTodos={setTodos}\n            filterBy={filterBy}\n            setfilterBy={setfilterBy}\n          />\n        )}\n      </div>\n      {(unableAddTodo\n        || unableDeleteTodo\n        || unableUpdateTodo\n        || unableEmptyTitle)\n        && (\n          <ErorsField\n            onCloseError={onCloseError}\n            unableAddTodo={unableAddTodo}\n            unableEmptyTitle={unableEmptyTitle}\n            unableDeleteTodo={unableDeleteTodo}\n            unableUpdateTodo={unableUpdateTodo}\n          />\n        )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}